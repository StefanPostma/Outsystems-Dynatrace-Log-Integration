{
    "version": 11,
    "variables": [
        {
            "key": "Application",
            "type": "query",
            "input": "fetch logs\n| filterOut application_name == \"\"\n| sort application_name asc\n| summarize collectDistinct(application_name)",
            "multiple": true
        },
        {
            "key": "Tenant",
            "type": "query",
            "input": "fetch logs //, scanLimitGBytes: 500, samplingRatio: 1000\n| fieldsAdd strTenant=toString(tenant_name)\n| sort strTenant asc\n| summarize collectDistinct(tenant_name)",
            "multiple": true
        },
        {
            "key": "Environment",
            "type": "query",
            "input": "fetch logs //, scanLimitGBytes: 500, samplingRatio: 1000\n| fieldsAdd strTenant=toString(environment_name)\n| sort strTenant asc\n| summarize collectDistinct(environment_name)",
            "multiple": true
        }
    ],
    "tiles": {
        "1": {
            "type": "data",
            "title": "",
            "query": "fetch logs //, scanLimitGBytes: 500, samplingRatio: 1000\n| filter message_type == \"Error\"\n| filter in(application_name, $Application) \n| filter in(environment_name, $Environment) \n| filter in(tenant_name, $Tenant)\n| filter error_message <> \"\"\n| summarize Count = countDistinct(id) ,by:{Application=application_name, Tenant=tenant_name, Environment=environment_name, Pattern=error_message}\n| sort Count desc\n| fieldsAdd link = concat(\"https://TENANTID.apps.dynatrace.com/ui/apps/dynatrace.dashboards/dashboard/14beeac5-2016-438d-b14b-0ecf62d1d965//edit/tile/0/main/0,0#vfilter_Environment=\",encodeUrl(Environment),\"&vfilter_Application=\",encodeUrl(Application),\"&vfilter_Error_Message=\",encodeUrl(Pattern))\n| limit 100\n",
            "visualization": "table",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "seriesOverrides": [
                        {
                            "seriesId": [
                                "Scheduler Service: Discarding event for Process ",
                                "count"
                            ],
                            "override": {
                                "color": "#b3007d"
                            }
                        }
                    ],
                    "valueRepresentation": "absolute",
                    "leftYAxisSettings": {
                        "scale": "linear",
                        "max": "data-max"
                    },
                    "categoricalBarChartSettings": {
                        "layout": "vertical",
                        "categoryAxisTickLayout": "horizontal",
                        "valueAxisLabel": "count",
                        "categoryAxisLabel": "msg.pattern",
                        "categoryAxis": "msg.pattern",
                        "valueAxis": "count"
                    },
                    "legend": {
                        "position": "auto",
                        "hidden": false
                    },
                    "colorPalette": "log-level"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "lineWrapIds": [
                        [
                            "msg.pattern"
                        ]
                    ]
                }
            }
        },
        "3": {
            "type": "markdown",
            "title": "",
            "content": "### Top Error Pattern Count\n> by Application / Tenant"
        },
        "6": {
            "type": "markdown",
            "title": "",
            "content": "#\n### Top Slow Requests\n> by Application / Action \n\n> sort by total time (average x number of occurences)"
        },
        "7": {
            "type": "data",
            "title": "Average duration of slower requests",
            "query": "fetch logs //, scanLimitGBytes: 500, samplingRatio: 1000\n| filter module_name == \"SLOWSQL\"\n| filter in(application_name, $Application)\n| filter in(environment_name, $Environment)\n| summarize {\n\t\tcount = count(), \n\t\tmaxDuration = takeMax(toLong(outsystems.request.slowquery.query.duration.ms)), \n\t\tavg = avg(toLong(outsystems.request.slowquery.query.duration.ms))\n\t}, by:{\n\t\tapplication = application_name, \n        tenant = tenant_name,\n\t\tmodule = module_name, \n\t\taction = action_name, \n        environment = environment_name \n\t}\n| fieldsAdd avgInSec = round(avg / 1000, decimals:2)\n| fieldsAdd ApplicationAction = concat(application, \" | \", action)\n| fields ApplicationAction, count, avg, maxDuration\n| fieldsAdd cpu = avg * count\n// added the below summarize to aggregate the biz events to the selected timeframe (on the top right corner)\n| summarize Count=sum(count), Average=avg(avg), MaxDuration=max(maxDuration), TotalTime=sum(avg * count), by:ApplicationAction\n| sort TotalTime desc\n| limit 10",
            "visualization": "table",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "circleChartSettings": {
                        "groupingThresholdType": "absolute"
                    },
                    "categoricalBarChartSettings": {
                        "valueAxisLabel": "Occurrences",
                        "categoryAxisLabel": "Avg. Time",
                        "categoryAxis": "label",
                        "valueAxis": "count",
                        "layout": "vertical",
                        "scale": "absolute",
                        "categoryAxisTickLayout": "horizontal"
                    },
                    "legend": {
                        "position": "bottom",
                        "hidden": false
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "lineWrapIds": [
                        [
                            "label"
                        ]
                    ],
                    "hiddenColumns": []
                }
            }
        },
        "8": {
            "type": "data",
            "title": "Error % per application",
            "query": "fetch bizevents //, scanLimitGBytes: 500, samplingRatio: 1000\n| filter event.type == \"outsystems.error.patterns\"\n| filter in(application, $Application) \n| filter in(environment, $Environment) \n| filter in(tenant_name, $Tenant)\n| filter msg.pattern <> \"\"\n| summarize Count = sum(count) ,by:{Application=application}\n| sort Count desc\n| limit 100",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "circleChartSettings": {
                        "groupingThresholdType": "absolute",
                        "hideLabels": false
                    },
                    "categoricalBarChartSettings": {
                        "categoryAxis": "Application",
                        "categoryAxisLabel": "Application",
                        "valueAxis": "Count",
                        "valueAxisLabel": "Count"
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "prefixIcon": "",
                    "autoscale": true,
                    "alignment": "center"
                },
                "table": {
                    "rowDensity": "condensed",
                    "enableLineWrap": true,
                    "enableSparklines": false,
                    "hiddenColumns": [],
                    "lineWrapIds": [],
                    "columnWidths": {}
                }
            }
        },
        "9": {
            "type": "data",
            "title": "Error % per error pattern",
            "query": "fetch bizevents //, scanLimitGBytes: 500, samplingRatio: 1000\n| filter event.type == \"outsystems.error.patterns\"\n| filter in(application, $Application) \n| filter in(environment, $Environment) \n| filter in(tenant_name, $Tenant)\n| filter msg.pattern <> \"\"\n| summarize Count = sum(count) ,by:{msg.pattern}\n| sort Count desc\n| limit 100",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "circleChartSettings": {
                        "groupingThresholdType": "absolute",
                        "hideLabels": false
                    },
                    "categoricalBarChartSettings": {
                        "categoryAxis": "msg.pattern",
                        "categoryAxisLabel": "msg.pattern",
                        "valueAxis": "Count",
                        "valueAxisLabel": "Count"
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "prefixIcon": "",
                    "autoscale": true,
                    "alignment": "center"
                },
                "table": {
                    "rowDensity": "condensed",
                    "enableLineWrap": true,
                    "enableSparklines": false,
                    "hiddenColumns": [],
                    "lineWrapIds": [],
                    "columnWidths": {}
                }
            }
        },
        "10": {
            "type": "data",
            "title": "Errors % per module",
            "query": "fetch bizevents //, scanLimitGBytes: 500, samplingRatio: 1000\n| filter event.type == \"outsystems.error.patterns\"\n| filter in(application, $Application) \n| filter in(environment, $Environment) \n| filter in(tenant_name, $Tenant)\n| filter msg.pattern <> \"\"\n| summarize Count = sum(count) ,by:{module}\n| sort Count desc\n| limit 100",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "circleChartSettings": {
                        "groupingThresholdType": "absolute",
                        "hideLabels": false
                    },
                    "categoricalBarChartSettings": {
                        "categoryAxis": "module",
                        "categoryAxisLabel": "module",
                        "valueAxis": "Count",
                        "valueAxisLabel": "Count"
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "prefixIcon": "",
                    "autoscale": true,
                    "alignment": "center"
                },
                "table": {
                    "rowDensity": "condensed",
                    "enableLineWrap": true,
                    "enableSparklines": false,
                    "hiddenColumns": [],
                    "lineWrapIds": [],
                    "columnWidths": {}
                }
            }
        }
    },
    "layouts": {
        "1": {
            "x": 0,
            "y": 2,
            "w": 24,
            "h": 7
        },
        "3": {
            "x": 0,
            "y": 0,
            "w": 10,
            "h": 2
        },
        "6": {
            "x": 0,
            "y": 9,
            "w": 24,
            "h": 3
        },
        "7": {
            "x": 0,
            "y": 12,
            "w": 24,
            "h": 9
        },
        "8": {
            "x": 0,
            "y": 21,
            "w": 7,
            "h": 10
        },
        "9": {
            "x": 8,
            "y": 21,
            "w": 7,
            "h": 10
        },
        "10": {
            "x": 17,
            "y": 21,
            "w": 7,
            "h": 10
        }
    }
}